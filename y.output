Terminals unused in grammar

   NL
   STMT
   BOOLEAN


State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls main
    2        | main

    3 decls: DECL declarations ENDDECL

    4 declarations: declarations decl
    5             | decl

    6 decl: INT ID ';'
    7     | INT ID '[' NUM ']' ';'
    8     | BOOL ID ';'
    9     | BOOL ID '[' NUM ']' ';'

   10 main: START slist END

   11 slist: slist stmt
   12      | stmt

   13 expr: expr PLUS expr
   14     | expr MUL expr
   15     | expr MINUS expr
   16     | expr DIV expr
   17     | expr MOD expr
   18     | expr LT expr
   19     | expr GT expr
   20     | expr EQ expr
   21     | expr LTE expr
   22     | expr NOTEQ expr
   23     | expr GTE expr
   24     | expr AND expr
   25     | expr OR expr
   26     | NOT expr
   27     | '(' expr ')'
   28     | NUM
   29     | TRUE
   30     | FALSE
   31     | ID '[' expr ']'
   32     | ID

   33 stmt: ID '[' expr ']' ASGN expr ';'
   34     | ID ASGN expr ';'
   35     | READ '(' ID ')' ';'
   36     | READ '(' ID '[' expr ']' ')' ';'
   37     | WRITE '(' ID '[' expr ']' ')' ';'
   38     | WRITE '(' expr ')' ';'
   39     | IF '(' expr ')' THEN slist ENDIF ';'
   40     | WHILE '(' expr ')' DO slist ENDWHILE ';'
   41     | IF '(' expr ')' THEN slist ELSE slist ENDIF ';'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 27 35 36 37 38 39 40 41
')' (41) 27 35 36 37 38 39 40 41
';' (59) 6 7 8 9 33 34 35 36 37 38 39 40 41
'[' (91) 7 9 31 33 36 37
']' (93) 7 9 31 33 36 37
error (256)
ID (258) 6 7 8 9 31 32 33 34 35 36 37
READ (259) 35 36
WRITE (260) 37 38
NUM (261) 7 9 28
NL (262)
PLUS (263) 13
MUL (264) 14
MINUS (265) 15
DIV (266) 16
MOD (267) 17
ASGN (268) 33 34
LT (269) 18
GT (270) 19
EQ (271) 20
IF (272) 39 41
ELSE (273) 41
THEN (274) 39 41
WHILE (275) 40
DO (276) 40
ENDWHILE (277) 40
ENDIF (278) 39 41
STMT (279)
START (280) 10
END (281) 10
LTE (282) 21
GTE (283) 23
NOTEQ (284) 22
DECL (285) 3
ENDDECL (286) 3
INT (287) 6 7
BOOL (288) 8 9
TRUE (289) 29
FALSE (290) 30
BOOLEAN (291)
AND (292) 24
OR (293) 25
NOT (294) 26


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1 2, on right: 0
decls (47)
    on left: 3, on right: 1
declarations (48)
    on left: 4 5, on right: 3 4
decl (49)
    on left: 6 7 8 9, on right: 4 5
main (50)
    on left: 10, on right: 1 2
slist (51)
    on left: 11 12, on right: 10 11 39 40 41
expr (52)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32, on right: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 31
    33 34 36 37 38 39 40 41
stmt (53)
    on left: 33 34 35 36 37 38 39 40 41, on right: 11 12


State 0

    0 $accept: . program $end

    START  shift, and go to state 1
    DECL   shift, and go to state 2

    program  go to state 3
    decls    go to state 4
    main     go to state 5


State 1

   10 main: START . slist END

    ID     shift, and go to state 6
    READ   shift, and go to state 7
    WRITE  shift, and go to state 8
    IF     shift, and go to state 9
    WHILE  shift, and go to state 10

    slist  go to state 11
    stmt   go to state 12


State 2

    3 decls: DECL . declarations ENDDECL

    INT   shift, and go to state 13
    BOOL  shift, and go to state 14

    declarations  go to state 15
    decl          go to state 16


State 3

    0 $accept: program . $end

    $end  shift, and go to state 17


State 4

    1 program: decls . main

    START  shift, and go to state 1

    main  go to state 18


State 5

    2 program: main .

    $default  reduce using rule 2 (program)


State 6

   33 stmt: ID . '[' expr ']' ASGN expr ';'
   34     | ID . ASGN expr ';'

    ASGN  shift, and go to state 19
    '['   shift, and go to state 20


State 7

   35 stmt: READ . '(' ID ')' ';'
   36     | READ . '(' ID '[' expr ']' ')' ';'

    '('  shift, and go to state 21


State 8

   37 stmt: WRITE . '(' ID '[' expr ']' ')' ';'
   38     | WRITE . '(' expr ')' ';'

    '('  shift, and go to state 22


State 9

   39 stmt: IF . '(' expr ')' THEN slist ENDIF ';'
   41     | IF . '(' expr ')' THEN slist ELSE slist ENDIF ';'

    '('  shift, and go to state 23


State 10

   40 stmt: WHILE . '(' expr ')' DO slist ENDWHILE ';'

    '('  shift, and go to state 24


State 11

   10 main: START slist . END
   11 slist: slist . stmt

    ID     shift, and go to state 6
    READ   shift, and go to state 7
    WRITE  shift, and go to state 8
    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    END    shift, and go to state 25

    stmt  go to state 26


State 12

   12 slist: stmt .

    $default  reduce using rule 12 (slist)


State 13

    6 decl: INT . ID ';'
    7     | INT . ID '[' NUM ']' ';'

    ID  shift, and go to state 27


State 14

    8 decl: BOOL . ID ';'
    9     | BOOL . ID '[' NUM ']' ';'

    ID  shift, and go to state 28


State 15

    3 decls: DECL declarations . ENDDECL
    4 declarations: declarations . decl

    ENDDECL  shift, and go to state 29
    INT      shift, and go to state 13
    BOOL     shift, and go to state 14

    decl  go to state 30


State 16

    5 declarations: decl .

    $default  reduce using rule 5 (declarations)


State 17

    0 $accept: program $end .

    $default  accept


State 18

    1 program: decls main .

    $default  reduce using rule 1 (program)


State 19

   34 stmt: ID ASGN . expr ';'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 37


State 20

   33 stmt: ID '[' . expr ']' ASGN expr ';'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 38


State 21

   35 stmt: READ '(' . ID ')' ';'
   36     | READ '(' . ID '[' expr ']' ')' ';'

    ID  shift, and go to state 39


State 22

   37 stmt: WRITE '(' . ID '[' expr ']' ')' ';'
   38     | WRITE '(' . expr ')' ';'

    ID     shift, and go to state 40
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 41


State 23

   39 stmt: IF '(' . expr ')' THEN slist ENDIF ';'
   41     | IF '(' . expr ')' THEN slist ELSE slist ENDIF ';'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 42


State 24

   40 stmt: WHILE '(' . expr ')' DO slist ENDWHILE ';'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 43


State 25

   10 main: START slist END .

    $default  reduce using rule 10 (main)


State 26

   11 slist: slist stmt .

    $default  reduce using rule 11 (slist)


State 27

    6 decl: INT ID . ';'
    7     | INT ID . '[' NUM ']' ';'

    ';'  shift, and go to state 44
    '['  shift, and go to state 45


State 28

    8 decl: BOOL ID . ';'
    9     | BOOL ID . '[' NUM ']' ';'

    ';'  shift, and go to state 46
    '['  shift, and go to state 47


State 29

    3 decls: DECL declarations ENDDECL .

    $default  reduce using rule 3 (decls)


State 30

    4 declarations: declarations decl .

    $default  reduce using rule 4 (declarations)


State 31

   31 expr: ID . '[' expr ']'
   32     | ID .

    '['  shift, and go to state 48

    $default  reduce using rule 32 (expr)


State 32

   28 expr: NUM .

    $default  reduce using rule 28 (expr)


State 33

   29 expr: TRUE .

    $default  reduce using rule 29 (expr)


State 34

   30 expr: FALSE .

    $default  reduce using rule 30 (expr)


State 35

   26 expr: NOT . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 49


State 36

   27 expr: '(' . expr ')'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 50


State 37

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   34 stmt: ID ASGN expr . ';'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ';'    shift, and go to state 64


State 38

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   33 stmt: ID '[' expr . ']' ASGN expr ';'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ']'    shift, and go to state 65


State 39

   35 stmt: READ '(' ID . ')' ';'
   36     | READ '(' ID . '[' expr ']' ')' ';'

    '['  shift, and go to state 66
    ')'  shift, and go to state 67


State 40

   31 expr: ID . '[' expr ']'
   32     | ID .
   37 stmt: WRITE '(' ID . '[' expr ']' ')' ';'

    '['  shift, and go to state 68

    $default  reduce using rule 32 (expr)


State 41

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   38 stmt: WRITE '(' expr . ')' ';'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ')'    shift, and go to state 69


State 42

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   39 stmt: IF '(' expr . ')' THEN slist ENDIF ';'
   41     | IF '(' expr . ')' THEN slist ELSE slist ENDIF ';'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ')'    shift, and go to state 70


State 43

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   40 stmt: WHILE '(' expr . ')' DO slist ENDWHILE ';'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ')'    shift, and go to state 71


State 44

    6 decl: INT ID ';' .

    $default  reduce using rule 6 (decl)


State 45

    7 decl: INT ID '[' . NUM ']' ';'

    NUM  shift, and go to state 72


State 46

    8 decl: BOOL ID ';' .

    $default  reduce using rule 8 (decl)


State 47

    9 decl: BOOL ID '[' . NUM ']' ';'

    NUM  shift, and go to state 73


State 48

   31 expr: ID '[' . expr ']'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 74


State 49

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   26     | NOT expr .

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 26 (expr)


State 50

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | '(' expr . ')'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ')'    shift, and go to state 75


State 51

   13 expr: expr PLUS . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 76


State 52

   14 expr: expr MUL . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 77


State 53

   15 expr: expr MINUS . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 78


State 54

   16 expr: expr DIV . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 79


State 55

   17 expr: expr MOD . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 80


State 56

   18 expr: expr LT . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 81


State 57

   19 expr: expr GT . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 82


State 58

   20 expr: expr EQ . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 83


State 59

   21 expr: expr LTE . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 84


State 60

   23 expr: expr GTE . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 85


State 61

   22 expr: expr NOTEQ . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 86


State 62

   24 expr: expr AND . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 87


State 63

   25 expr: expr OR . expr

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 88


State 64

   34 stmt: ID ASGN expr ';' .

    $default  reduce using rule 34 (stmt)


State 65

   33 stmt: ID '[' expr ']' . ASGN expr ';'

    ASGN  shift, and go to state 89


State 66

   36 stmt: READ '(' ID '[' . expr ']' ')' ';'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 90


State 67

   35 stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 91


State 68

   31 expr: ID '[' . expr ']'
   37 stmt: WRITE '(' ID '[' . expr ']' ')' ';'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 92


State 69

   38 stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 93


State 70

   39 stmt: IF '(' expr ')' . THEN slist ENDIF ';'
   41     | IF '(' expr ')' . THEN slist ELSE slist ENDIF ';'

    THEN  shift, and go to state 94


State 71

   40 stmt: WHILE '(' expr ')' . DO slist ENDWHILE ';'

    DO  shift, and go to state 95


State 72

    7 decl: INT ID '[' NUM . ']' ';'

    ']'  shift, and go to state 96


State 73

    9 decl: BOOL ID '[' NUM . ']' ';'

    ']'  shift, and go to state 97


State 74

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   31     | ID '[' expr . ']'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ']'    shift, and go to state 98


State 75

   27 expr: '(' expr ')' .

    $default  reduce using rule 27 (expr)


State 76

   13 expr: expr . PLUS expr
   13     | expr PLUS expr .
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    MUL  shift, and go to state 52
    DIV  shift, and go to state 54
    MOD  shift, and go to state 55

    $default  reduce using rule 13 (expr)


State 77

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   14     | expr MUL expr .
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 14 (expr)


State 78

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    MUL  shift, and go to state 52
    DIV  shift, and go to state 54
    MOD  shift, and go to state 55

    $default  reduce using rule 15 (expr)


State 79

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   16     | expr DIV expr .
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 16 (expr)


State 80

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   17     | expr MOD expr .
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 81

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   18     | expr LT expr .
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 18 (expr)


State 82

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   19     | expr GT expr .
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 19 (expr)


State 83

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   20     | expr EQ expr .
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 84

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   21     | expr LTE expr .
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 85

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   23     | expr GTE expr .
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 86

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   22     | expr NOTEQ expr .
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 87

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   24     | expr AND expr .
   25     | expr . OR expr

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 88

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   25     | expr OR expr .

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55

    LT     error (nonassociative)
    GT     error (nonassociative)
    EQ     error (nonassociative)
    LTE    error (nonassociative)
    GTE    error (nonassociative)
    NOTEQ  error (nonassociative)
    AND    error (nonassociative)
    OR     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 89

   33 stmt: ID '[' expr ']' ASGN . expr ';'

    ID     shift, and go to state 31
    NUM    shift, and go to state 32
    TRUE   shift, and go to state 33
    FALSE  shift, and go to state 34
    NOT    shift, and go to state 35
    '('    shift, and go to state 36

    expr  go to state 99


State 90

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   36 stmt: READ '(' ID '[' expr . ']' ')' ';'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ']'    shift, and go to state 100


State 91

   35 stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 35 (stmt)


State 92

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   31     | ID '[' expr . ']'
   37 stmt: WRITE '(' ID '[' expr . ']' ')' ';'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ']'    shift, and go to state 101


State 93

   38 stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 38 (stmt)


State 94

   39 stmt: IF '(' expr ')' THEN . slist ENDIF ';'
   41     | IF '(' expr ')' THEN . slist ELSE slist ENDIF ';'

    ID     shift, and go to state 6
    READ   shift, and go to state 7
    WRITE  shift, and go to state 8
    IF     shift, and go to state 9
    WHILE  shift, and go to state 10

    slist  go to state 102
    stmt   go to state 12


State 95

   40 stmt: WHILE '(' expr ')' DO . slist ENDWHILE ';'

    ID     shift, and go to state 6
    READ   shift, and go to state 7
    WRITE  shift, and go to state 8
    IF     shift, and go to state 9
    WHILE  shift, and go to state 10

    slist  go to state 103
    stmt   go to state 12


State 96

    7 decl: INT ID '[' NUM ']' . ';'

    ';'  shift, and go to state 104


State 97

    9 decl: BOOL ID '[' NUM ']' . ';'

    ';'  shift, and go to state 105


State 98

   31 expr: ID '[' expr ']' .

    $default  reduce using rule 31 (expr)


State 99

   13 expr: expr . PLUS expr
   14     | expr . MUL expr
   15     | expr . MINUS expr
   16     | expr . DIV expr
   17     | expr . MOD expr
   18     | expr . LT expr
   19     | expr . GT expr
   20     | expr . EQ expr
   21     | expr . LTE expr
   22     | expr . NOTEQ expr
   23     | expr . GTE expr
   24     | expr . AND expr
   25     | expr . OR expr
   33 stmt: ID '[' expr ']' ASGN expr . ';'

    PLUS   shift, and go to state 51
    MUL    shift, and go to state 52
    MINUS  shift, and go to state 53
    DIV    shift, and go to state 54
    MOD    shift, and go to state 55
    LT     shift, and go to state 56
    GT     shift, and go to state 57
    EQ     shift, and go to state 58
    LTE    shift, and go to state 59
    GTE    shift, and go to state 60
    NOTEQ  shift, and go to state 61
    AND    shift, and go to state 62
    OR     shift, and go to state 63
    ';'    shift, and go to state 106


State 100

   36 stmt: READ '(' ID '[' expr ']' . ')' ';'

    ')'  shift, and go to state 107


State 101

   31 expr: ID '[' expr ']' .
   37 stmt: WRITE '(' ID '[' expr ']' . ')' ';'

    ')'  shift, and go to state 108

    ')'       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 102

   11 slist: slist . stmt
   39 stmt: IF '(' expr ')' THEN slist . ENDIF ';'
   41     | IF '(' expr ')' THEN slist . ELSE slist ENDIF ';'

    ID     shift, and go to state 6
    READ   shift, and go to state 7
    WRITE  shift, and go to state 8
    IF     shift, and go to state 9
    ELSE   shift, and go to state 109
    WHILE  shift, and go to state 10
    ENDIF  shift, and go to state 110

    stmt  go to state 26


State 103

   11 slist: slist . stmt
   40 stmt: WHILE '(' expr ')' DO slist . ENDWHILE ';'

    ID        shift, and go to state 6
    READ      shift, and go to state 7
    WRITE     shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    ENDWHILE  shift, and go to state 111

    stmt  go to state 26


State 104

    7 decl: INT ID '[' NUM ']' ';' .

    $default  reduce using rule 7 (decl)


State 105

    9 decl: BOOL ID '[' NUM ']' ';' .

    $default  reduce using rule 9 (decl)


State 106

   33 stmt: ID '[' expr ']' ASGN expr ';' .

    $default  reduce using rule 33 (stmt)


State 107

   36 stmt: READ '(' ID '[' expr ']' ')' . ';'

    ';'  shift, and go to state 112


State 108

   37 stmt: WRITE '(' ID '[' expr ']' ')' . ';'

    ';'  shift, and go to state 113


State 109

   41 stmt: IF '(' expr ')' THEN slist ELSE . slist ENDIF ';'

    ID     shift, and go to state 6
    READ   shift, and go to state 7
    WRITE  shift, and go to state 8
    IF     shift, and go to state 9
    WHILE  shift, and go to state 10

    slist  go to state 114
    stmt   go to state 12


State 110

   39 stmt: IF '(' expr ')' THEN slist ENDIF . ';'

    ';'  shift, and go to state 115


State 111

   40 stmt: WHILE '(' expr ')' DO slist ENDWHILE . ';'

    ';'  shift, and go to state 116


State 112

   36 stmt: READ '(' ID '[' expr ']' ')' ';' .

    $default  reduce using rule 36 (stmt)


State 113

   37 stmt: WRITE '(' ID '[' expr ']' ')' ';' .

    $default  reduce using rule 37 (stmt)


State 114

   11 slist: slist . stmt
   41 stmt: IF '(' expr ')' THEN slist ELSE slist . ENDIF ';'

    ID     shift, and go to state 6
    READ   shift, and go to state 7
    WRITE  shift, and go to state 8
    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    ENDIF  shift, and go to state 117

    stmt  go to state 26


State 115

   39 stmt: IF '(' expr ')' THEN slist ENDIF ';' .

    $default  reduce using rule 39 (stmt)


State 116

   40 stmt: WHILE '(' expr ')' DO slist ENDWHILE ';' .

    $default  reduce using rule 40 (stmt)


State 117

   41 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF . ';'

    ';'  shift, and go to state 118


State 118

   41 stmt: IF '(' expr ')' THEN slist ELSE slist ENDIF ';' .

    $default  reduce using rule 41 (stmt)
